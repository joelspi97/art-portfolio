// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using art_portfolio_api.Data;

#nullable disable

namespace art_portfolio_api.Migrations
{
    [DbContext(typeof(ArtPortfolioDbContext))]
    [Migration("20230807154940_GotRidOfUnnecessaryColumn")]
    partial class GotRidOfUnnecessaryColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArtPieceMedium", b =>
                {
                    b.Property<int>("ArtPieceId")
                        .HasColumnType("int");

                    b.Property<int>("MediumsId")
                        .HasColumnType("int");

                    b.HasKey("ArtPieceId", "MediumsId");

                    b.HasIndex("MediumsId");

                    b.ToTable("ArtPieceMedium", (string)null);
                });

            modelBuilder.Entity("art_portfolio_api.Models.DomainModels.ArtPiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArtPieces");
                });

            modelBuilder.Entity("art_portfolio_api.Models.DomainModels.Medium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Mediums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Óleo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Témpera"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Acuarela"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Acrílico"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pastel Graso"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pastel Tiza"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Gráfito"
                        });
                });

            modelBuilder.Entity("ArtPieceMedium", b =>
                {
                    b.HasOne("art_portfolio_api.Models.DomainModels.ArtPiece", null)
                        .WithMany()
                        .HasForeignKey("ArtPieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("art_portfolio_api.Models.DomainModels.Medium", null)
                        .WithMany()
                        .HasForeignKey("MediumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
